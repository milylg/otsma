(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{445:function(v,_,a){"use strict";a.r(_);var l=a(15),e=Object(l.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h5",{attrs:{id:"maven存在的理由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven存在的理由"}},[v._v("#")]),v._v(" Maven存在的理由")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("项目特别庞大时，仅依靠package划分模块，十分繁杂，不利于团队分工，Maven"),a("strong",[v._v("可以将一个项目拆分程多个单独的项目")])])]),v._v(" "),a("li",[a("p",[v._v("项目中的jar包重复出现，工程文件冗余，不便于管理，Maven"),a("strong",[v._v("可以将jar保存到仓库中，每个项目仅需要引用jar的地址即可")])])]),v._v(" "),a("li",[a("p",[v._v("每个项目的jar包需要依赖其他的jar包，需要手动加入依赖的jar包，下载来源多，不统一，Maven"),a("strong",[v._v("可以从指定的仓库中以规范的方式自动导入jar包依赖的jar包")])])])]),v._v(" "),a("h5",{attrs:{id:"maven是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven是什么"}},[v._v("#")]),v._v(" Maven是什么？")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("服务java平台的自动化构建工具（gradle比maven更加先进）")])]),v._v(" "),a("li",[a("p",[v._v("构建过程")]),v._v(" "),a("p",[v._v("概念：以java源文件，配置文件，jsp等资源去生产一个可以运行的项目")]),v._v(" "),a("ol",[a("li",[v._v("编译：.java ----编译-----\x3e.class --\x3e加入到jvm内存")]),v._v(" "),a("li",[v._v("部署")]),v._v(" "),a("li",[v._v("搭建")])])]),v._v(" "),a("li",[a("p",[v._v("构建的环节（生命周期）")]),v._v(" "),a("ol",[a("li",[v._v("清理：将以前编译的class文件删除，为下一次编译做准备")]),v._v(" "),a("li",[v._v("编译：将java文件编译成字节码文件")]),v._v(" "),a("li",[v._v("测试：自动测试，自动调用junit测试程序")]),v._v(" "),a("li",[v._v("报告：测试程序执行的结果")]),v._v(" "),a("li",[v._v("打包：动态web工程打成war或jar包")]),v._v(" "),a("li",[v._v("安装：将打包的文件存放到指定的仓库的位置")]),v._v(" "),a("li",[v._v("部署：将war包或jar包复制到servlet容器中，使其能够运行")])])]),v._v(" "),a("li",[a("p",[v._v("Maven核心概念")]),v._v(" "),a("ol",[a("li",[v._v("约定的目录结构(约定>配置>编码)")]),v._v(" "),a("li",[v._v("pom.xml文件")]),v._v(" "),a("li",[v._v("坐标")]),v._v(" "),a("li",[v._v("依赖")]),v._v(" "),a("li",[v._v("仓库")]),v._v(" "),a("li",[v._v("生命周期")]),v._v(" "),a("li",[v._v("继承")]),v._v(" "),a("li",[v._v("聚合")])])]),v._v(" "),a("li",[a("p",[v._v("Maven插件")])])]),v._v(" "),a("p",[v._v("maven核心程序仅定义了抽象的生命周期，具体的执行操作需要其他插件来完成，他会在本地仓库(默认仓库在系统盘中的.m2文件目录中)，如果本地仓库没有，则会通过联网的方式下载执行命令需要的插件。")]),v._v(" "),a("p",[v._v("可以通过修改maven核心程序中的corf/setting.xml文件中的"),a("code",[v._v("localRespository")]),v._v("标签指定maven插件下载存放的文件目录位置")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("POM")]),v._v(" "),a("p",[a("strong",[v._v("P")]),v._v("roject "),a("strong",[v._v("O")]),v._v("bject "),a("strong",[v._v("M")]),v._v("odel 项目对象模型，类似DOM 文档对象模型")]),v._v(" "),a("p",[v._v("pom.xml文件是maven中的核心配置文件")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("坐标")]),v._v(" "),a("blockquote",[a("ul",[a("li",[v._v("groupid：公司/组织+项目名")]),v._v(" "),a("li",[v._v("artifactid：模块名")]),v._v(" "),a("li",[v._v("version：版本")])])])])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);