(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{457:function(a,t,n){"use strict";n.r(t);var s=n(15),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("p",[n("img",{attrs:{src:"/images/Spring%E8%A3%85%E9%85%8D%E6%96%B9%E5%BC%8F.png",alt:"装配方式图解"}})]),a._v(" "),n("h4",{attrs:{id:"_1-xml配置文件装配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-xml配置文件装配"}},[a._v("#")]),a._v(" 1. xml配置文件装配")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("bean的构造方法注入")])]),a._v(" "),n("li",[n("p",[a._v("bean的set方法注入")])])]),a._v(" "),n("h4",{attrs:{id:"_2-自动装配-使用annotation注解标记相应的类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-自动装配-使用annotation注解标记相应的类"}},[a._v("#")]),a._v(" 2. 自动装配: 使用Annotation注解标记相应的类")]),a._v(" "),n("ul",[n("li",[a._v('@Component(value="bean名称")   注解标记的泛化\n'),n("ul",[n("li",[a._v('@Repository(value="bean名称")用于标识数据访问层')]),a._v(" "),n("li",[a._v('@Service(value="bean名称")用于标识业务层')]),a._v(" "),n("li",[a._v('@Controller(value="bean名称")用于标识控制层')])])]),a._v(" "),n("li",[a._v('@Resource(name="bean名称") Java提供的默认按Bean实例的名称装配\n'),n("ul",[n("li",[a._v('(name="bean名称")')]),a._v(" "),n("li",[a._v('(type="bean类型")')])])]),a._v(" "),n("li",[a._v("@AutoWired按Bean类型装配，用于对bean的属性，set方法，构造方法进行注入，与注解处理器配合使用")]),a._v(" "),n("li",[a._v('@Qualifier(value="bean名称") 按Bean实例的名称装配，和@AutoWired配合使用')])]),a._v(" "),n("h4",{attrs:{id:"_3-基于javaconfig配置装配bean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-基于javaconfig配置装配bean"}},[a._v("#")]),a._v(" 3. 基于JavaConfig配置装配Bean")]),a._v(" "),n("p",[a._v("使用注解自动扫描")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("@ComponentScan指定扫描的范围，相当于context:component-scan标签")]),a._v(" "),n("ul",[n("li",[a._v("如果注解内没有参数，则表示扫描JavaConfig文件所在包以及子包内所有带注解的Bean")]),a._v(" "),n("li",[a._v("能够在Spring中启用组件扫描")])])]),a._v(" "),n("li",[n("p",[a._v("@Bean注解")])])]),a._v(" "),n("hr"),a._v(" "),n("h4",{attrs:{id:"autowire和resource注解的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#autowire和resource注解的区别"}},[a._v("#")]),a._v(" Autowire和Resource注解的区别?")]),a._v(" "),n("ul",[n("li",[n("p",[n("strong",[a._v("来源不同")])]),a._v(" "),n("ul",[n("li",[a._v("autowire来自spring模块")]),a._v(" "),n("li",[a._v("resource来自jdk")])])]),a._v(" "),n("li",[n("p",[n("strong",[a._v("作用不同")])]),a._v(" "),n("ul",[n("li",[a._v("autowire根据bean的类型注入,如果需要按照bean的名称则需要与Qualifier搭配使用")]),a._v(" "),n("li",[a._v("resource默认根据bean名称注入,也可通过配置根据bean类型注入.当按名称寻找不到,则按类型寻找,如果找不到抛异常")])])])]),a._v(" "),n("h4",{attrs:{id:"autowire注解的详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#autowire注解的详解"}},[a._v("#")]),a._v(" @Autowire注解的详解")]),a._v(" "),n("ul",[n("li",[n("p",[n("strong",[a._v("源码")])]),a._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("CONSTRUCTOR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("METHOD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PARAMETER"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FIELD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ElementType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ANNOTATION_TYPE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Retention")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RetentionPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("RUNTIME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Documented")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@interface")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Autowired")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("required")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])])]),a._v(" "),n("li",[n("p",[n("strong",[a._v("required")])]),a._v(" "),n("ul",[n("li",[a._v("如果没有匹配的bean，那么在应用上下文创建的时候，Spring会抛出一个异常。为了避免异常的出现，可以将"),n("code",[a._v("@Autowired")]),a._v("的"),n("code",[a._v("required")]),a._v("属性设置为"),n("code",[a._v("false")])]),a._v(" "),n("li",[a._v("设置为false时，Spring会尝试执行自动装配，但是如果没有匹配的bean的话，Spring将会让这个bean处于未装配的状态")])])]),a._v(" "),n("li",[n("p",[n("strong",[a._v("@Autowire注解的替换方案")])]),a._v(" "),n("ul",[n("li",[a._v("@Inject")])])])]),a._v(" "),n("h4",{attrs:{id:"组件扫描和自动装配不适用的场景该如何"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件扫描和自动装配不适用的场景该如何"}},[a._v("#")]),a._v(" 组件扫描和自动装配不适用的场景该如何？")]),a._v(" "),n("p",[a._v("有时候自动化配置的方案行不通，因此需要明确配置Spring，有两种可选方案：JavaConfig和XML")]),a._v(" "),n("h4",{attrs:{id:"javaconfig的特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javaconfig的特点"}},[a._v("#")]),a._v(" "),n("strong",[a._v("JavaConfig的特点")])]),a._v(" "),n("ul",[n("li",[a._v("JavaConfig是更好的方案，因为它更为强大、类型安全并且对重构友好")]),a._v(" "),n("li",[a._v("不应该包含任何业务逻辑")]),a._v(" "),n("li",[a._v("不应该侵入到业务逻辑代码之中")]),a._v(" "),n("li",[a._v("通常会将JavaConfig放到单独的包中，使它与其他的应用程序逻辑分离开")])]),a._v(" "),n("h4",{attrs:{id:"如何实践-配置config类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何实践-配置config类"}},[a._v("#")]),a._v(" "),n("strong",[a._v("如何实践：配置Config类？")])]),a._v(" "),n("ul",[n("li",[a._v("@Configuration配置注解，在类的层面上标注，表明它是一个配置类")]),a._v(" "),n("li",[a._v("@ComponentScan自动扫描，允许spring扫描")]),a._v(" "),n("li",[a._v("@Bean，在创建配置类的方法上标注，获取bean的名称与方法名相同，也可通过@Bean的name属性自定义")])]),a._v(" "),n("img",{attrs:{src:"/images/JavaConfigClass.png"}}),a._v(" "),n("p",[a._v("前提是开启组件扫描配置")]),a._v(" "),n("div",{staticClass:"language-xml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("context:")]),a._v("component-scan")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("base-package")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("com.spring, com.config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);